#ifndef command_h
#define command_h
#include <Arduino.h>
#include <Servo_megaTinyCore.h>
class CommandServo{
        public:
                CommandServo(){};
                virtual void execute(Servo s[], uint8_t curr, proto[] pr)=0;
                uint8_t _code;
                uint8_t _delay;
                uint8_t angle;

};
class Coreo : public CommandServo{
        public:
                virtual void execute(Servo s[],uint8_t curr, proto[] pr);
}
class Mdir: public CommandServo{
        public:
                
                virtual void execute(Servo s[],uint8_t curr, proto[] pr);
};

class MstpOne : public CommandServo{
        public:
                
                virtual void execute(Servo s[], uint8_t curr, proto[] pr);
};
class MstpTwo : public CommandServo{
        public:
                virtual void execute(Servo s[], uint8_t curr, proto[] pr);
};
class Stay : public CommandServo{
        public:
                virtual void execute(Servo s[], uint8_t curr, proto[] pr);
};
static inline CommandServo* CreateServo (uint8_t cod, uint8_t del, uint8_t ang){
        CommandServo* cs;
        switch (cod){
                case 0x01:
                        cs= (CommandServo*) new Mdir();
                        break;
                case 0x02:
                        cs= (CommandServo*) new MstpOne();
                        break;
                case 0x03:
                        cs=(CommandServo*)new MstpTwo();
                        break;
                case 0x04:
                        cs=(CommandServo*)new Stay();
                        break;
                default:
                        cs=0;
                        break;
        }
        cs->_code=cod;
        cs->_delay=del;
        cs->angle=ang;

                        return cs;
                }
#endif
